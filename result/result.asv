d1 = load('data.csv');
d2 = load('data_low_frictionloss.csv');

figure();
for i=1:12
    subplot(2,6,i);
    plot(d1(:,i));
    hold on
    plot(d2(:,i));
end

figure();
for i=13:33
    subplot(4,6,i-12);
    plot(d1(:,i));
    hold on
    plot(d2(:,i));
end

%%
clc; clearvars;
% d3 = load('./iserdata/data_nodelay.csv');
% 
% figure();
% % observation 62.5Hz
% plot(d3(2000:3000,1),d3(2000:3000,6))
% hold on
% plot(d3(2000:3000,1),d3(2000:3000,12))
% 
% d4 = load('./iserdata/data_orig.csv');
% 
% figure();
% % observation 2000Hz
% plot(d4(2000:3000,1),d4(2000:3000,6))
% hold on
% plot(d4(2000:3000,1),d4(2000:3000,12))
% 
% d5 = load('./iserdata/data_nodelay_w_buffer.csv');
% 
% figure();
% % observation 2000Hz with buffer
% plot(d5(2000:3000,1),d5(2000:3000,6))
% hold on
% plot(d5(2000:3000,1),d5(2000:3000,12))


d6 = load('./iserdata/data_orig.csv');
% observation 2000Hz with buffer + action_dt_accumulate_ EDIT
figure();
% observation 2000Hz with buffer
plot(d6(2000:3000,1),d6(2000:3000,6))
hold on
plot(d6(2000:3000,1),d6(2000:3000,12))

d7 = load('./iserdata/data_3.csv');
% observation 2000Hz with buffer + action_dt_accumulate_ EDIT
figure();
% observation 2000Hz with buffer
plot(d7(2000:3000,1),d7(2000:3000,6))
hold on
plot(d7(2000:3000,1),d7(2000:3000,12))


%% Value Function
% 1                writeFile << (rd_cc_.control_time_us_ - start_time_)/1e6 << "\t";
% 2                writeFile << phase_ << "\t";
% 3                writeFile << DyrosMath::minmax_cut(rl_action_(num_action-1)*1/250.0, 0.0, 1/250.0) << "\t";
% 
% 4-9                  writeFile << rd_cc_.LF_FT.transpose() << "\t";
% 10-15                writeFile << rd_cc_.RF_FT.transpose() << "\t";
% 16-21                writeFile << rd_cc_.LF_CF_FT.transpose() << "\t";
% 22-27                writeFile << rd_cc_.RF_CF_FT.transpose() << "\t";
% 
% 28-60                writeFile << rd_cc_.torque_desired.transpose()  << "\t";
% 61-93                writeFile << q_noise_.transpose() << "\t";
% 94-126                writeFile << q_dot_lpf_.transpose() << "\t";
% 127-165                writeFile << rd_cc_.q_dot_virtual_.transpose() << "\t";
% 166-205                writeFile << rd_cc_.q_virtual_.transpose() << "\t";

% 206 207  208              writeFile << value_ << "\t" << stop_by_value_thres_ << reward;
clear d
d = load('data.csv');

figure()
yyaxis left
plot(d(:,1),d(:,206), 'LineWidth', 7)
ylabel('Value','FontSize', 40, 'FontWeight','bold')
yyaxis right
plot(d(:,1),d(:,end), 'LineWidth', 7)
ylabel('IsStopped','FontSize', 40, 'FontWeight','bold')

set(gca,'FontSize',20, 'FontWeight','bold')
title('Emergent Stop Using Value Function','FontSize', 50)
xlabel('Time(s)','FontSize', 14, 'FontWeight','bold')
legend('Value','Stopped','FontSize', 50, 'FontWeight','bold')
grid on
ax = gca;

ax.GridColor = [0 0 0];
ax.GridLineStyle = '-';
ax.GridAlpha = 0.5;

figure()
plot(d(:,167))

figure()
plot(d(:,[6,12]),'DisplayName','d(:,[6,12])')
%%
figure()
for i=1:12
    subplot(2,6,i)
    plot(d(1:1000,1),d(1:1000,132+i))
    hold on
    plot(d2(1:1000,1),d2(1:1000,132+i))
end

figure()
plot(d(1:1000,1),d(1:1000,6))
hold on
plot(d(1:1000,1),d(1:1000,12))
plot(d2(1:1000,1),d2(1:1000,6))
plot(d2(1:1000,1),d2(1:1000,12))

%%
clc; clearvars;

% Read the CSV file
filename = 'data_250.csv';
data = readmatrix(filename);

% Extracting columns from the data
% 1. Inference Step Time Difference (Column 1)
time_diff = data(:, 1);

% Create a cumulative time series from the differences
time = cumsum(time_diff); % Now, 'time' can be used as the x-axis

% 2. Phase (Column 2)
phase = data(:, 2);

% 3. RL Action (Column 3)
rl_action = data(:, 3);

% 4-9. LF_FT (Columns 4-9)
LF_FT = data(:, 4:9);

% 10-15. RF_FT (Columns 10-15)
RF_FT = data(:, 10:15);

% 16-21. LF_CF_FT (Columns 16-21)
LF_CF_FT = data(:, 16:21);

% 22-27. RF_CF_FT (Columns 22-27)
RF_CF_FT = data(:, 22:27);

% 28-60. Torque Desired (Columns 28-60)
torque_desired = data(:, 28:60);

% 61-93. q_noise (Columns 61-93)
q_noise = data(:, 61:93);

% 94-126. q_dot_lpf (Columns 94-126)
q_dot_lpf = data(:, 94:126);

% 127-165. q_dot_virtual (Columns 127-165)
q_dot_virtual = data(:, 127:165);

% 166-205. q_virtual (Columns 166-205)
q_virtual = data(:, 166:205);

% 206-208. Value, stop_by_value_thres, reward (Columns 206-208)
value = data(:, 206);
stop_by_value_thres = data(:, 207);
reward = data(:, 208);

% Enhanced Plotting
% % Plot 1: Time vs Phase
% figure('Name', 'Time vs Phase', 'NumberTitle', 'off', 'Position', [100, 100, 800, 600]);
% plot(time, phase, 'Color', [0.1, 0.4, 0.8], 'LineWidth', 2);
% xlabel('Time (s)', 'FontWeight', 'bold', 'FontSize', 12);
% ylabel('Phase', 'FontWeight', 'bold', 'FontSize', 12);
% title('Time vs Phase', 'FontWeight', 'bold', 'FontSize', 14);
% grid on;
% set(gca, 'GridAlpha', 0.3, 'FontSize', 12);
% 
% % Plot 2: Time vs RL Action
% figure('Name', 'Time vs RL Action', 'NumberTitle', 'off', 'Position', [100, 100, 800, 600]);
% plot(time, rl_action, 'Color', [0.85, 0.1, 0.1], 'LineWidth', 2);
% xlabel('Time (s)', 'FontWeight', 'bold', 'FontSize', 12);
% ylabel('RL Action', 'FontWeight', 'bold', 'FontSize', 12);
% title('Time vs RL Action', 'FontWeight', 'bold', 'FontSize', 14);
% grid on;
% set(gca, 'GridAlpha', 0.3, 'FontSize', 12);

% % Plot 4: LF_FT and RF_FT with Subplots
% figure('Name', 'Time vs LF_FT and RF_FT', 'NumberTitle', 'off', 'Position', [100, 100, 1000, 800]);
% subplot(2, 1, 1);
% plot(time, LF_FT, 'LineWidth', 1.5);
% xlabel('Time (s)', 'FontWeight', 'bold', 'FontSize', 12);
% ylabel('LF_FT', 'FontWeight', 'bold', 'FontSize', 12);
% title('Time vs LF_FT', 'FontWeight', 'bold', 'FontSize', 14);
% legend('LF_FT_1', 'LF_FT_2', 'LF_FT_3', 'LF_FT_4', 'LF_FT_5', 'LF_FT_6', 'Location', 'northeastoutside');
% grid on;
% set(gca, 'GridAlpha', 0.3, 'FontSize', 12);
% 
% subplot(2, 1, 2);
% plot(time, RF_FT, 'LineWidth', 1.5);
% xlabel('Time (s)', 'FontWeight', 'bold', 'FontSize', 12);
% ylabel('RF_FT', 'FontWeight', 'bold', 'FontSize', 12);
% title('Time vs RF_FT', 'FontWeight', 'bold', 'FontSize', 14);
% legend('RF_FT_1', 'RF_FT_2', 'RF_FT_3', 'RF_FT_4', 'RF_FT_5', 'RF_FT_6', 'Location', 'northeastoutside');
% grid on;
% set(gca, 'GridAlpha', 0.3, 'FontSize', 12);

% Calculate accumulated reward until 32 seconds
time_limit_idx = find(time <= 32, 1, 'last');
if ~isempty(time_limit_idx) && time_limit_idx > 1
    accumulated_reward = cumsum(reward(1:time_limit_idx));

    % Plot Accumulated Reward Until 32 Seconds
    figure('Name', 'Accumulated Reward Until 32 Seconds', 'NumberTitle', 'off', 'Position', [100, 100, 800, 600]);
    plot(time(1:time_limit_idx), accumulated_reward, 'Color', [0.1, 0.7, 0.2], 'LineWidth', 2);
    xlabel('Time (s)', 'FontWeight', 'bold', 'FontSize', 12);
    ylabel('Accumulated Reward', 'FontWeight', 'bold', 'FontSize', 12);
    title('Accumulated Reward Until 32 Seconds', 'FontWeight', 'bold', 'FontSize', 14);
    grid on;
    set(gca, 'GridAlpha', 0.3, 'FontSize', 12);
else
    disp('Time limit index for 32 seconds not found or insufficient data points.');
end

% Calculate average reward over time
if ~isempty(reward) && length(reward) > 1
    average_reward = cumsum(reward) ./ (1:length(reward))';

    % Plot Average Reward Over Time
    figure('Name', 'Average Reward Over Time', 'NumberTitle', 'off', 'Position', [100, 100, 800, 600]);
    plot(time, average_reward, 'Color', [0.2, 0.5, 0.9], 'LineWidth', 2);
    xlabel('Time (s)', 'FontWeight', 'bold', 'FontSize', 12);
    ylabel('Average Reward', 'FontWeight', 'bold', 'FontSize', 12);
    title('Average Reward Over Time', 'FontWeight', 'bold', 'FontSize', 14);
    grid on;
    set(gca, 'GridAlpha', 0.3, 'FontSize', 12);
else
    disp('No valid reward data available for calculating average reward.');
end

% 2. **Control Effort vs. Time**: Sum of squared torque desired over time
control_effort = sum(torque_desired .^ 2, 2);
figure('Name', 'Control Effort Over Time', 'NumberTitle', 'off', 'Position', [100, 100, 800, 600]);
plot(time, control_effort, 'Color', [0.7, 0.3, 0.8], 'LineWidth', 2);
xlabel('Time (s)', 'FontWeight', 'bold', 'FontSize', 12);
ylabel('Control Effort (Sum of Squared Torque)', 'FontWeight', 'bold', 'FontSize', 12);
title('Control Effort Over Time', 'FontWeight', 'bold', 'FontSize', 14);
grid on;
set(gca, 'GridAlpha', 0.3, 'FontSize', 12);

% 3. **Reward vs. Control Effort**: Scatter plot showing reward obtained for given control effort
figure('Name', 'Reward vs Control Effort', 'NumberTitle', 'off', 'Position', [100, 100, 800, 600]);
scatter(control_effort, reward, 20, 'filled', 'MarkerEdgeColor', [0, 0.5, 0.5], 'MarkerFaceColor', [0, 0.7, 0.7]);
xlabel('Control Effort (Sum of Squared Torque)', 'FontWeight', 'bold', 'FontSize', 12);
ylabel('Reward', 'FontWeight', 'bold', 'FontSize', 12);
title('Reward vs Control Effort', 'FontWeight', 'bold', 'FontSize', 14);
grid on;
set(gca, 'GridAlpha', 0.3, 'FontSize', 12);

